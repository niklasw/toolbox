#!/usr/bin/env sh

function usage()
{
    prog=$(basename $0)
    cat << EOF
    Usage:
    Run various operations on a selected aws ec2 instance. Instance selection
    is made by environment variable AWS_INSTANCE, by argument -i or interactive
    option -I

    NOTE:
        Args -i and -I must be first in arguments list

    Implemented commands are:
        list
        state
        status (same as state)
        type
        start
        stop
        set-type <t3.micro|t3.medium>

    Options (must come first):
        -i <instance-id>    Use instance instance-id
        -I                  Select from available instances (slower)

    Examples:
        $prog list
        $prog -i <instance-id> state
        $prog -I type
        $prog set-type t3.micro
EOF
}

function test_connection()
{
    aws sts get-caller-identity
    return $?
}

SELECTED_INSTANCE=${AWS_INSTANCE:-"i-08866845398612bab"}

function list_instances()
{
    aws ec2 describe-instances --output text --query \
        "Reservations[*].Instances[*].InstanceId"
}

function get_instance_state()
{
    [ -n "$1" ] || { echo "no instance id selected"; exit 1; }
    aws ec2 describe-instances --output text \
        --query "Reservations[*].Instances[*].State.Name" \
        --filters Name=instance-id,Values=$1
}

function stop_instance()
{
    aws ec2 stop-instances --instance-ids $1
}

function start_instance()
{
    [ -n "$1" ] || { echo "no instance id selected"; exit 1; }
    _OPTIONS="" #"--hibernation-options Configured=true"
    aws ec2 start-instances --instance-ids $1 $_OPTIONS
}

function get_instance_type()
{
    aws ec2 describe-instances --output text --query \
        "Reservations[*].Instances[*].InstanceType" \
        --filters Name=instance-id,Values=$1
}

function set_instance_type()
{
    case $2 in
        t3.micro) ;;
        t3.medium) ;;
        *)
            echo "wrong instance type"
            exit 1
            ;;
    esac

    EC2_STATE=$(get_instance_state "$1")
    if [[ "$EC2_STATE" != "stopped" ]]
    then
        echo -e "\nWaiting for instance to stop ($EC2_STATE)\n"
        stop_instance "$1"
        aws ec2 wait instance-stopped --instance-ids $1
    else
        echo -e "\nInstance already $EC2_STATE\n"
    fi

    aws ec2 modify-instance-attribute --instance-id "$1" \
        --instance-type "{\"Value\":\"$2\"}"

    if [[ $? == 0 ]]
    then
        start_instance $1
    else
        echo -e "\nmodify-instance-attribute faled with code $?"
        exit 1
    fi
}

function make_instance_small()
{
    TYPE=$(get_instance_type $1)
}

function select_instance()
{
    select INSTANCE in Cancel $(list_instances)
    do
        case $INSTANCE in
            "Cancel")
                echo "Exiting"
                exit 0
                break
                ;;
            *)
                SELECTED_INSTANCE=$INSTANCE
                break
                ;;
        esac
    done
    echo $SELECTED_INSTANCE
}

for a in $@
do
    case $a in
        -h|--help|help)
            usage
            exit 0
            ;;
    esac
done
 
if [[ ! $(test_connection) ]]
then
    echo -e "\n\tConnection failed. Check credentials (~/.aws/credentials)."
    exit 1
fi

while [ "$#" -gt 0 ]
do
    case $1 in
        -i)
            SELECTED_INSTANCE=$2
            shift 2
            ;;
        -I)
            SELECTED_INSTANCE=$(select_instance)
            shift 1
            ;;
        list)
            list_instances
            shift 1
            break
            ;;
        start)
            start_instance $SELECTED_INSTANCE
            shift 1
            break
            ;;
        state|status)
            get_instance_state $SELECTED_INSTANCE
            shift 1
            break
            ;;
        type)
            get_instance_type $SELECTED_INSTANCE
            shift 1
            break
            ;;
        get-type)
            get_instance_type $SELECTED_INSTANCE
            shift 1
            break
            ;;
        stop)
            stop_instance $SELECTED_INSTANCE
            shift 1
            break
            ;;
        set-type)
            set_instance_type $SELECTED_INSTANCE $2
            shift 2
            ;;
        *)
            echo -e "Unknown command $1\n"
            usage
            break
            ;;
    esac
done

